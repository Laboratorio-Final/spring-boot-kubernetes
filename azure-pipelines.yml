# Starter pipeline
# Start with a minimal pipeline that you can customize to build and deploy your code.
# Add steps that build, run tests, deploy, and more:
# https://aka.ms/yaml

pool:
  vmImage: ubuntu-latest

stages:
- stage: 
  jobs:
  - job: build
    displayName: 'Build'
    steps:
    - task: Maven@4
      inputs:
        mavenPomFile: 'pom.xml'
        publishJUnitResults: true
        testResultsFiles: '**/surefire-reports/TEST-*.xml'
        javaHomeOption: 'JDKVersion'
        mavenVersionOption: 'Default'
        mavenAuthenticateFeed: false
        effectivePomSkip: false
        sonarQubeRunAnalysis: false

- stage: SAST 
  jobs:
  - job: sonar
    workspace:
      clean: all
    displayName:  Code Review
    steps:
      - task: SonarCloudPrepare@1
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'laboratorio-final'
          projectKey: 'Laboratorio-Final_spring-boot-kubernetes'
          projectName: 'spring-boot-kubernetes'

      - task: Maven@4
        inputs:
          mavenPomFile: 'pom.xml'
          publishJUnitResults: true
          testResultsFiles: '**/surefire-reports/TEST-*.xml'
          javaHomeOption: 'JDKVersion'
          jdkVersionOption: '1.11'
          mavenVersionOption: 'Default'
          mavenAuthenticateFeed: false
          effectivePomSkip: false
          sonarQubeRunAnalysis: true
          sqMavenPluginVersionChoice: 'latest'
        displayName: 'Analizar rama actual'

      - task: sonarcloud-buildbreaker@2
        inputs:
          SonarCloud: 'sonarcloud'
          organization: 'laboratorio-final'

- stage: Docker
  jobs:
  - job: docker
    steps:
    - task: DockerInstaller@0
      inputs:
        dockerVersion: '17.09.0-ce'
      displayName: Install Docker
    - task: Docker@2
      inputs:
        containerRegistry: 'Docker'
        repository: 'lytch000/spring-boot-kubernetes'
        command: 'build'
        Dockerfile: '**/Dockerfile'
        tags: 'latest'
      displayName: Build Docker

    - script: | 
        sudo apt-get install -y rpm
        wget https://github.com/aquasecurity/trivy/releases/download/v0.34.0/trivy_0.34.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.34.0_Linux-64bit.deb
        trivy image --format template --template "@/usr/local/share/trivy/templates/html.tpl" -o trivy-report.html vimarin/spring-boot-kubernetes:3.6
      displayName: Image Scan
    